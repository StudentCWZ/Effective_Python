# -*- coding: utf-8 -*-
# @Author: StudentCWZ
# @Date:   2022-08-04 09:53:26
# @Last Modified by:   StudentCWZ
# @Last Modified time: 2022-08-04 10:07:33


# 第二十六条：只在使用 Mix-in 组件制作工具类时进行多重继承


"""
    1. Python 是面向对象的编程语言，它提供了一些内置的编程机制，使得开发者可以适当地实现多重继承。但是，我们仍然应该尽量避开多重继承。
    2. 若一定要利用多重继承所带来的便利及封装性，那么就可以考虑编写 min-in 类。mix-in 是一种小型的类，它只定义了其他类可能需要提供
       的一套附加方法，而不定义自己的实力属性，此外，它也不要求使用者调用自己的 __init__ 构造器
    3. 由于 Python 程序可以方便地查看各类对象的当前状态，所以编写 mix-in 比较容易。我们可以在 mix-in 里面通过动态检测机制先编写一
       套通用的功能代码，稍后再将其应用到其他很多类上面。分层地组合 mix-in 类可以减少重复代码并提升复用度。
    4. 例如，要把内存中的 Python 对象转换为字典形式，以便将其序列化，那我们就不妨把这个功能写成通用的代码，以供其他类使用

"""